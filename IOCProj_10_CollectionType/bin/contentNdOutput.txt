                                   Collection Type Injection(via Constructor & setter Injection)
                                   
                                   
                                                       Collection(I)
                                    _____________|______________
                                    |                                                           |
                                    |                                                           |
                              List (I)                                                     Set(I)                        
                                |                                                                 |
           _________ |_____________                       ______|______
           |                            |                    |                      |     
       Vector                     |                    |                      |------------HashSet       
           |                     ArrayList      LinkedList          |------------TreeSet
        stack                                                                  |------------LinkedHashSet          
                                                                                  
                                                                                  
                                       
                                       Map
                      _________|__________
                     |                                           |------------HashMap  
                 HashTable                             | ------------TreeMap
                     |                                           |------------LinkedHashSet  
                Properties                              
                
 Note : By default If you use 
                                                <list>   tag    (IOC Container takes ArrayList as Imp  class)     
                                                <set>   tag    (IOC Container takes LinkedHashSet as Imp  class)     
                                                <map> tag  (IOC Container takes LinkedHashSet as Imp  class)               
                
         
    //If IOC Container use DTD schema then default implementation of Collection are
                                                                                                    (List(I) impl ->ArrayList 
                                                                                                     ,Set(I) impl ->LinkedHashSet,
                                                                                                     Map(I)--->LinkedHashMap)
         
         
 //Then if we want use Specific Collection Type (Vector,Stack,HashMap...etc)
         To support  Specific Collection Type we can use Xml util namespace.
         
  <?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

<!-- bean definitions here -->

</beans>
                
  <!-- creates a java.util.List instance with the supplied values -->
<util:list id="emails">
    <value>pechorin@hero.org</value>
    <value>raskolnikov@slums.org</value>
    <value>stavrogin@gov.org</value>
    <value>porfiry@gov.org</value>
</util:list>

<util:list id="emails" list-class="java.util.LinkedList">
    <value>jackshaftoe@vagabond.org</value>
    <value>eliza@thinkingmanscrumpet.org</value>
    <value>vanhoek@pirate.org</value>
    <value>d'Arcachon@nemesis.org</value>
</util:list>
      
  <!-- creates a java.util.Map instance with the supplied key-value pairs -->
<util:map id="emails">
    <entry key="pechorin" value="pechorin@hero.org"/>
    <entry key="raskolnikov" value="raskolnikov@slums.org"/>
    <entry key="stavrogin" value="stavrogin@gov.org"/>
    <entry key="porfiry" value="porfiry@gov.org"/>
</util:map>  

<util:map id="emails" map-class="java.util.TreeMap">
    <entry key="pechorin" value="pechorin@hero.org"/>
    <entry key="raskolnikov" value="raskolnikov@slums.org"/>
    <entry key="stavrogin" value="stavrogin@gov.org"/>
    <entry key="porfiry" value="porfiry@gov.org"/>
</util:map>

<!-- creates a java.util.Set instance with the supplied values -->
<util:set id="emails">
    <value>pechorin@hero.org</value>
    <value>raskolnikov@slums.org</value>
    <value>stavrogin@gov.org</value>
    <value>porfiry@gov.org</value>
</util:set>        
    
  <util:set id="emails" set-class="java.util.TreeSet">
    <value>pechorin@hero.org</value>
    <value>raskolnikov@slums.org</value>
    <value>stavrogin@gov.org</value>
    <value>porfiry@gov.org</value>
</util:set>            
        
        
   Output :             
   ------------
  *...Start ......collectionWithPrimitiveData....................
Student. Static Block.....!
Student. 0-param constructor
Employee. static Block
Employee. 2-param constructor.......!
[150, 108, 152, 136]
[Harish, Ramu, Raju, swapana]
{maths=75, sanskrit=98, Physics=52}

Murthy
Laxman
spandana
{720=spandana, 540=Laxman, 241=Murthy}
Check IOC Container Default Implementation classes are.........!
List (Default Imp)-------->class java.util.ArrayList
Set (Default Imp)-------->class java.util.LinkedHashSet
Map (Default Imp)-------->class java.util.LinkedHashMap
*...End ......collectionWithPrimitiveData....................

*...Start ......collectionWithReferenceData....................
EnggCollege. static Block....!
EnggCollege. o-param constructor....!
EnggFaculty. static Block....!
EnggFaculty. 0-param constructor.......!
EnggFaculty. 0-param constructor.......!
EnggFaculty. 0-param constructor.......!
FacultyName-->Raghu  ,FacultySubject--->SpringBoot
FacultyName-->Ashok  ,FacultySubject--->Hibernate
FacultyName-->Harikrishna  ,FacultySubject--->Corejava
*...End ......collectionWithReferenceData....................

*...Start ......collectionWithSpecificTypeByXmlUtilNamespace....................
Person . static Block.!
Person.0-param constructor...!
[Mango, Guava, papaya ]
[Yuvi , Viru, Sachin]
{America=Washington, D.C., India=Delhi, Japan=Tokyo}
Check IOC Container  Implementation classes are.........!
Vector -------->class java.util.Vector
HashSet-------->class java.util.HashSet
TreeMap-------->class java.util.TreeMap
*...End ......collectionWithSpecificTypeByXmlUtilNamespace....................
  